<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置自动扫描包 -->
    <context:component-scan base-package="com.omega"/>

    <!-- 配置 SpringMVC 的视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置前缀后缀, 如果 handler 返回的是 ok, 那么会在这里拼接成 /pages/ok.jsp -->
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
       配置可以解析自定义视图的解析器 (可以配置多个)
       (1) BeanNameViewResolver 可以解析自定义视图的解析器
       (2) name="order": 表示给这个解析器设置优先级, order 值越低, 视图解析器的优先级越高.
           (order 值默认值为 Integer.MAX_VALUE, InternalResourceViewResolver 的默认 order 值也为这个)
    -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="99" />
    </bean>


    <!--加入两个常规配置-->
    <!--支持SpringMVC的高级功能，比如 映射动态请求(支持handler接收restful请求), JSR303校验-->
    <mvc:annotation-driven/>
    <!--将springmvc不能处理的请求，交给 tomcat 处理, 比如css, js-->
    <mvc:default-servlet-handler/>
</beans>